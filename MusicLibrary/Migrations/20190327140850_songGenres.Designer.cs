// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MusicLibrary.Models;
using System;

namespace MusicLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190327140850_songGenres")]
    partial class songGenres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicLibrary.Models.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("AlbumID");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MusicLibrary.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MusicLibrary.Models.Song", b =>
                {
                    b.Property<int>("SongID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Artist");

                    b.Property<string>("Title");

                    b.HasKey("SongID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicLibrary.Models.SongAlbum", b =>
                {
                    b.Property<int>("SongAlbumID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlbumID");

                    b.Property<int>("SongID");

                    b.HasKey("SongAlbumID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("SongID");

                    b.ToTable("SongAlbums");
                });

            modelBuilder.Entity("MusicLibrary.Models.SongGenre", b =>
                {
                    b.Property<int>("SongGenreID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GenreID");

                    b.Property<int>("SongID");

                    b.HasKey("SongGenreID");

                    b.HasIndex("GenreID");

                    b.HasIndex("SongID");

                    b.ToTable("SongGenres");
                });

            modelBuilder.Entity("MusicLibrary.Models.SongAlbum", b =>
                {
                    b.HasOne("MusicLibrary.Models.Album", "Album")
                        .WithMany("AlbumSongs")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MusicLibrary.Models.Song", "Song")
                        .WithMany("SongAlbums")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MusicLibrary.Models.SongGenre", b =>
                {
                    b.HasOne("MusicLibrary.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MusicLibrary.Models.Song", "Song")
                        .WithMany("SongGenres")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
